security:
    encoders:
        App\Entity\User:
            algorithm: auto

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true
            lazy: true
            provider: app_user_provider
#            guard:
#                authenticators:
#                    - App\Security\LoginFormAuthenticator
            form_login:
                login_path: security_login
                check_path: security_login
                username_parameter: login[email]
                password_parameter: login[password]

            logout:
                path: security_logout

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    // config/packages/security.php
    $container->loadFromExtension('security', [
    // ...
#
#    'access_control' => [
#  [
#          'path'             => '^/secure',
#          'roles'            => 'ROLE_ADMIN',
#          'requires_channel' => 'https',
#  ],
#  [
#          'path'             => '^/login',
#          'role'             => 'IS_AUTHENTICATED_ANONYMOUSLY',
#          'requires_channel' => 'https',
#  ],
#  [
#          'path'             => '^/',
#          'role'             => 'IS_AUTHENTICATED_ANONYMOUSLY',
#          'requires_channel' => 'https',
#  ],
#],
#]);

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/admin, roles: ROLE_ADMIN, requires_channel: https }
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }
        - { path: ^/, roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }
        # - { path: ^/profile, roles: ROLE_USER }
